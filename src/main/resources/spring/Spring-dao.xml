<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--配置整合Mybatis过程-->

    <!--1.配置数据库相关参数properties的属性：${url}-->
    <!--jdbc.properties不能建在根目录的子文件夹里-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>



    <!--2.数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
       <!--配置连接池属性-->
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!--c3p0连接池的私有属性-->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!--关闭连接后不自动commit-->
        <property name="autoCommitOnClose" value="false"/>
        <!--线程用完后超时的时间-->
        <property name="checkoutTimeout" value="1000"/>
        <!--当获取连接失败重试次数-->
        <property name="acquireIncrement" value="2"/>
    </bean>


    <!--约定大于配置-->
    <!--3.配置SqlSessionFactory工厂-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置Mybatis全局配置文件：Mybatis-Config.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--扫描enrtity包，使用别名(使在mapper的sql中当返回类型或传入参数类型是引用类型实体时，不用写全类名-->
        <property name="typeAliasesPackage" value="cx.seckill.entity"/>
        <!--扫描sql配置文件,mapper下的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>



    <!--4.配置扫描DAO接口包，动态实现DAO接口，并注入到Spring容器中-->
    <bean id="mappersdao" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描的DAO接口包:目的（该包下的DAO接口，被自动产生实现类，并注入到Spring容器中-->
        <property name="basePackage" value="cx.seckill.dao"/>
    </bean>
<!--RedisDao-->
    <bean id="redisDao" class="cx.seckill.dao.cache.RedisDao">
        <constructor-arg index="0" value="localhost"/>
        <constructor-arg index="1" value="6379"/>
    </bean>


</beans>